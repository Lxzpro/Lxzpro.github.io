<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>免费个人图床搭建【最佳方案】</title>
      <link href="/posts/14664.html"/>
      <url>/posts/14664.html</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><blockquote><p>搭建个人图床的方法有很多，可以通过很多平台赠送的免费额度来存储自己的文件</p><p><strong>首先</strong></p><p>​需要下载这个软件 —— PicGo:<a href="https://picgo.github.io/PicGo-Doc/zh/guide/">下载地址</a></p><blockquote><p><strong>其次</strong></p><p>你还需要准备</p><p>​1.自己的自定义域名（这个可以去阿里云或者腾讯云买一个，并不是很贵）</p><p>​2.一个平台账号（下面会说一种我在用的，还可以去上面的PicGo下载地址里面查看官方文档，也有其他平台的配置方法）</p></blockquote></blockquote><h2 id="1-通过-七牛云-PicGo-搭建个人图床"><a href="#1-通过-七牛云-PicGo-搭建个人图床" class="headerlink" title="1.通过 七牛云 + PicGo 搭建个人图床"></a>1.通过 七牛云 + PicGo 搭建个人图床</h2><p>我最开始先搭建了七牛云的存储服务，等所有配置都弄完才发现一个关键问题：从七牛云复制出来的资源链接，默认是 HTTP 协议的。但现在绝大部分网站都用的是 HTTPS 协议，浏览器会拦截 HTTPS 页面里的 HTTP 资源（也就是“混合内容”），直接导致这些资源用不了。 要解决这个问题，就得给七牛云的资源配 SSL 证书才能用 HTTPS 访问，可七牛云本身不提供免费证书，还得自己额外申请、再手动配置，步骤看着挺麻烦，我就没继续弄了。</p><p>如果实在想在七牛云上存储，貌似也是可以申请免费SSL证书的，可以通过下面关键词自行搜索一下</p><ol><li><p><strong>免费申请 SSL 证书</strong>：通过 <a href="https://letsencrypt.org/">Let’s Encrypt</a>（完全免费，90 天自动续期）或国内的 <a href="https://www.trustasia.com/free-ssl-certificate/">TrustAsia 免费证书</a> 申请域名型 SSL 证书（DV 证书）；</p></li><li><p>在七牛云绑定自定义域名并配置 HTTPS：</p><ul><li><p>先在你的域名服务商（如阿里云、腾讯云）将自定义域名（比如 <code>img.yourdomain.com</code>）解析到七牛云的 CDN 或对象存储域名；</p></li><li><p>登录七牛云控制台，在 “CDN→域名管理” 或 “对象存储→存储空间→域名管理” 中，添加这个自定义域名，然后上传你申请的 SSL 证书，开启 HTTPS；</p></li></ul></li><li><p>之后通过 <code>https://img.yourdomain.com/xxx.jpg</code> 引用七牛云资源，就能完美适配你的 HTTPS 网站，解决混合内容问题。</p></li></ol><h2 id="2-通过-Cloudflare-R2-PicGo-搭建个人图床（推荐）"><a href="#2-通过-Cloudflare-R2-PicGo-搭建个人图床（推荐）" class="headerlink" title="2.通过 Cloudflare R2 + PicGo 搭建个人图床（推荐）"></a>2.通过 Cloudflare R2 + PicGo 搭建个人图床（推荐）</h2><p>Cloudflare R2每月给用户提供免费额度，对于普通用户来说完全够用。<strong>（如果超出免费额度是要收费的，但是费用也是很可观的）</strong></p><ul><li>免费额度：<ul><li><strong>存储</strong>：每月提供 10GB - 月的免费存储额度。存储使用量以 GB - 月为计费指标，通过平均一个计费周期（30 天）内每天的峰值存储量来计算。</li><li><strong>操作请求</strong>：A 类操作每月免费 100 万次，B 类操作每月免费 1000 万次。A 类操作包括 ListBuckets、PutBucket、ListObjects 等改变状态的操作；B 类操作包括 HeadBucket、HeadObject、GetObject 等读取现有状态的操作。</li><li><strong>出口流量</strong>：通过 Workers API 直接访问、通过 S3 兼容 API 访问以及通过 r2.dev 子域名访问时，数据从 R2 存储桶传输到公共互联网产生的出口流量完全免费。</li></ul></li><li>收费制度：<ul><li><strong>存储</strong>：超出免费额度后，标准存储每 GB - 月收费 0.015 美元。</li><li><strong>操作请求</strong>：超出免费额度后，A 类操作每 100 万次收费 4.50 美元，B 类操作每 1000 万次收费 0.36 美元。</li></ul></li></ul><p>此外，如果使用的是 Infrequent Access 存储类，还会有数据检索费用，为每 GB 0.01 美元。</p><p><img src="https://lxztu.xyz/PicGo/Cloudflare01.png" alt="Cloudflare R2提供的免费额度"></p><h3 id="一、配置Cloudflare："><a href="#一、配置Cloudflare：" class="headerlink" title="一、配置Cloudflare："></a>一、配置Cloudflare：</h3><h4 id="1-先在官网注册一个账号-Cloudflare"><a href="#1-先在官网注册一个账号-Cloudflare" class="headerlink" title="1.先在官网注册一个账号 Cloudflare"></a>1.先在官网注册一个账号 <a href="https://dash.cloudflare.com/login">Cloudflare</a></h4><h4 id="2-注册之后需要添加一个付费计划，选择Free计划添加到订阅，添加的时候我们需要一个信用卡或者国区的PayPal账号，我是使用的我的信用卡，没有用PayPal账号。"><a href="#2-注册之后需要添加一个付费计划，选择Free计划添加到订阅，添加的时候我们需要一个信用卡或者国区的PayPal账号，我是使用的我的信用卡，没有用PayPal账号。" class="headerlink" title="2.注册之后需要添加一个付费计划，选择Free计划添加到订阅，添加的时候我们需要一个信用卡或者国区的PayPal账号，我是使用的我的信用卡，没有用PayPal账号。"></a>2.注册之后需要添加一个付费计划，选择Free计划添加到订阅，添加的时候我们需要一个信用卡或者国区的PayPal账号，我是使用的我的信用卡，没有用PayPal账号。</h4><h4 id="3-然后点击左边栏中的-R2对象存储-概述，然后在右边界面我们点击创建存储桶"><a href="#3-然后点击左边栏中的-R2对象存储-概述，然后在右边界面我们点击创建存储桶" class="headerlink" title="3.然后点击左边栏中的 R2对象存储-概述，然后在右边界面我们点击创建存储桶"></a>3.然后点击左边栏中的 R2对象存储-概述，然后在右边界面我们点击创建存储桶</h4><p><img src="https://lxztu.xyz/PicGo/Cloudflare02.png" alt="选择界面"></p><p>在这个界面，存储桶的名称可以自定义，位置建议选择亚太地区，其他都默认。</p><h4 id="4-创建完成之后，还无法直接用过公共的URL来访问，选择-设置-找到R2-dev子域，设置成允许访问，这时上传图片已经可以通过给定的默认URL来访问了"><a href="#4-创建完成之后，还无法直接用过公共的URL来访问，选择-设置-找到R2-dev子域，设置成允许访问，这时上传图片已经可以通过给定的默认URL来访问了" class="headerlink" title="4.创建完成之后，还无法直接用过公共的URL来访问，选择 设置-找到R2.dev子域，设置成允许访问，这时上传图片已经可以通过给定的默认URL来访问了"></a>4.创建完成之后，还无法直接用过公共的URL来访问，选择 设置-找到R2.dev子域，设置成允许访问，这时上传图片已经可以通过给定的默认URL来访问了</h4><p>但是，此时的URL需要挂梯子才能访问，国内访问太慢或者直接无法访问，我们需要通过设置自定义域名解决</p><h4 id="5-我们可以去阿里云或者腾讯云购买自己的域名，也不是很贵"><a href="#5-我们可以去阿里云或者腾讯云购买自己的域名，也不是很贵" class="headerlink" title="5.我们可以去阿里云或者腾讯云购买自己的域名，也不是很贵"></a>5.我们可以去<a href="https://wanwang.aliyun.com/domain/?spm=5176.30275541.J_ZGek9Blx07Hclc3Ddt9dg.1.6d242f3dtEuMxr&scm=20140722.S_card@@%E4%BA%A7%E5%93%81@@3417315.S_new~UND~card.ID_card@@%E4%BA%A7%E5%93%81@@3417315-RL_%E5%9F%9F%E5%90%8D-LOC_2024SPSearchCard-OR_ser-PAR1_2150423517590644092997433e2e3c-V_4-RE_new8-P0_0-P1_0">阿里云</a>或者<a href="https://cloud.tencent.com/product/domain">腾讯云</a>购买自己的域名，也不是很贵</h4><p>（由于我已经配置好了，没有截图了）</p><ol><li>之后在左侧导航栏，点击<strong>账号主页</strong>，在右侧页面点击<strong>加入域</strong>，之后，填入你自己的域名，选择Free计划</li><li>在跳转界面点击<strong>继续前往激活</strong>，弹窗<strong>确认</strong>-设置DNS记录，在跳转的界面中，会有两个更新<strong>名称服务器</strong>的DNS，</li><li>这时候需要我们打开之前购买平台的<strong>域名控制台</strong>，找到<strong>域名列表</strong>，对需要操作的域名点击<strong>管理</strong></li><li>这样会跳到基本信息栏，我们在左侧栏中选择<strong>DNS修改</strong>，进入页面之后，点击修改DNS服务器，将刚才复制的两个网址修改到上面</li><li>回到Cloudflare，之后等待一段时间后，域名的状态就会从 <em><strong>待处理的名称服务器更新</strong></em> 变成 <em><strong>活动</strong></em></li><li>接下来把自定义域名配置到存储桶，点击左侧的<strong>R2对象存储-概述</strong>,之后点到我们创建的<strong>存储桶</strong>，点到<strong>设置</strong>，找到<strong>自定义域</strong>，填入我们的自定义域名，点击<strong>连接域</strong>，之后等待自定义域名生效，即可通过自定义域名浏览文件。</li><li>这样图床就<strong>搭建成功</strong>了</li></ol><h3 id="二、连接PicGo"><a href="#二、连接PicGo" class="headerlink" title="二、连接PicGo"></a>二、连接PicGo</h3><h4 id="1-下载完成后，我们要在PicGo上下载插件"><a href="#1-下载完成后，我们要在PicGo上下载插件" class="headerlink" title="1.下载完成后，我们要在PicGo上下载插件"></a>1.下载完成后，我们要在PicGo上下载插件</h4><ol><li>找到插件设置，搜索 <strong>s3</strong>，找到 <strong>s3-lls 1.0.2</strong> 下载安装。</li></ol><h4 id="2-之后进行图床设置"><a href="#2-之后进行图床设置" class="headerlink" title="2.之后进行图床设置"></a>2.之后进行图床设置</h4><ol><li>找到图床<strong>Amazon S3</strong>进行设置</li><li>点击编辑默认的设置，自定义图床配置名，<strong>应用密钥ID</strong>以及<strong>应用密钥</strong>，需要从Cloudflare网站来获取</li><li>点击左侧导航栏中<strong>R2对象存储-概述</strong>，点击<strong>管理API令牌</strong>，之后<strong>创建API令牌</strong>，令牌名称自定义没有影响，权限选择<strong>对象读和写</strong>，然后<strong>创建API令牌</strong>，然后就会生成 <strong>访问密钥ID</strong> 和 <strong>机密访问密钥</strong>，这两个可以存到记事本中保存一下，好像是只能看一次。</li><li><strong>访问密钥ID</strong> 和 <strong>机密访问密钥</strong> 分别对应 PicGo中 <strong>应用密钥ID</strong> 和 <strong>应用密钥</strong> ，复制过去即可</li><li><strong>桶</strong> 填入我们创建<strong>存储桶</strong>的名字</li><li><strong>文件路径</strong>设置为<code>PicGo/&#123;fullName&#125;</code> ,这样以后访问的路径就是 <code>域名/PicGo/你的文件名</code>，也可以自定义。</li><li><strong>地区</strong> 填入auto</li><li><strong>自定义节点</strong> 设置为 <code>https://&lt;账户ID&gt;.r2.cloudflarestorage.com</code>，其中 <em><strong>账户ID</strong></em>换成你自己 <strong>存储桶的账户ID</strong>，在<strong>R2对象存储-概述</strong>界面，可以看到 <strong>Use R2 with APIs</strong> ，下面的 <strong>Account ID</strong> 就是你的账户ID，替换之后填入即可。</li><li><strong>自定义域名</strong> 填入你的自定义域名，记得要加上前面的http部分，如<code>https://lxztu.xyz</code></li><li>下面的两个设置都是yes，之后点击<strong>确定</strong>，把配置好的设置为默认图床，这样就配置好可以使用了。</li></ol><h4 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h4><p>我们可以在上传区拖拽批量上传照片，然后在相册区域可以批量复制图片的URL进行使用，非常方便。</p><h3 id="三、如果依旧不明白如何配置"><a href="#三、如果依旧不明白如何配置" class="headerlink" title="三、如果依旧不明白如何配置"></a>三、如果依旧不明白如何配置</h3><p>本文参考视频：</p><p><a href="https://www.bilibili.com/video/BV1eZCrY4E17/?share_source=copy_web&vd_source=e8c688f5a8b51b9365d17f48d7d64d6d">【个人图床最佳方案：Cloudflare R2 + PicGo！免费、稳定、国内+国外网络双向互通！】</a></p><p>结合本文 和 视频，可能让你更快的配置好</p></div>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客文章加密插件</title>
      <link href="/posts/10029.html"/>
      <url>/posts/10029.html</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如果你有给文章加密的需求，可以通过一个插件来实现这个功能 —— <strong>hexo-blog-encrypt</strong></p><h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><p>1.打开Hexo博客根目录，在根目录下执行下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p>其实只下载这个插件就可以直接使用了，接下来就是使用的方法了</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.可以通过tags针对一类文章进行加密</p><p>在配置文件<code>[BlogRoot]\_config.yml</code>中添加下面的代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line"><span class="attr">encrypt:</span> <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  <span class="attr">abstract:</span> <span class="string">有东西被加密了,</span> <span class="string">请输入密码查看.</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">您好,</span> <span class="string">这里需要密码.</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码A</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">密码B</span>&#125;</span><br><span class="line">  <span class="attr">theme:</span> <span class="string">xray</span></span><br><span class="line">  <span class="attr">wrong_pass_message:</span> <span class="string">抱歉,</span> <span class="string">这个密码看着不太对,</span> <span class="string">请再试试.</span></span><br><span class="line">  <span class="attr">wrong_hash_message:</span> <span class="string">抱歉,</span> <span class="string">这个文章不能被校验,</span> <span class="string">不过您还是能看看解密后的内容.</span></span><br></pre></td></tr></table></figure><p>之后 tags中列出的标签 就会按照设置的密码进行加密</p><p>2.通过Front matter配置</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> 加密</span><br><span class="line">date: 2025-09-27 16:03:20</span><br><span class="line">password: hello world</span><br><span class="line">abstract: 有东西被加密了, 请输入密码查看.</span><br><span class="line">message: 您好, 这里需要密码.</span><br><span class="line">theme: xray</span><br><span class="line">wrong<span class="emphasis">_pass_</span>message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line"><span class="section">wrong<span class="emphasis">_hash_</span>message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>在需要加密的文章中加入上面的Front matter，就可以加密成功了</p><p>3.主题配置</p><p>theme可以设置自己喜欢的加密样式，可以在线挑选自己喜欢的<strong>主题</strong>，有以下这些样式，可以点击查看</p><ul><li><p><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Default/">default</a></p></li><li><p><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Blink/">blink</a></p></li><li><p><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Shrink/">shrink</a></p></li><li><p><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Flip/">flip</a></p></li><li><p><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Up/">up</a></p></li><li><p><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Surge/">surge</a></p></li><li><p><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Wave/">wave</a></p></li><li><p><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Xray/">xray</a></p></li></ul><blockquote><p>！PS:貌似这个加密对相册是无效的</p></blockquote></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown速查表</title>
      <link href="/posts/3713.html"/>
      <url>/posts/3713.html</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="全面常用-Markdown-速查表"><a href="#全面常用-Markdown-速查表" class="headerlink" title="全面常用 Markdown 速查表"></a>全面常用 Markdown 速查表</h1><p>本速查表涵盖日常写作、笔记、文档编辑中高频使用的语法，包含基础格式、进阶排版、特殊元素等类别，每个语法均附「语法示例」和「效果展示」，方便直接复制使用。</p><blockquote><p><strong>由于我刚开始使用Markdown <del><em>并且又有些健忘</em></del>，特此用AI整理了以下总结  方便后续使用查找</strong></p></blockquote><h2 id="一、标题（6-级）"><a href="#一、标题（6-级）" class="headerlink" title="一、标题（6 级）"></a>一、标题（6 级）</h2><p>通过 <code>#</code> 数量区分级别，<code>#</code> 后加空格（规范写法），支持 1-6 级标题，级别越高字体越小。</p><table><thead><tr><th>语法示例</th><th>效果展示</th><th>说明</th></tr></thead><tbody><tr><td><code># 一级标题</code></td><td># 一级标题</td><td>常用作文档大标题，字体最大</td></tr><tr><td><code>## 二级标题</code></td><td>## 二级标题</td><td>常用作章节标题</td></tr><tr><td><code>### 三级标题</code></td><td>### 三级标题</td><td>常用作小节标题</td></tr><tr><td><code>#### 四级标题</code></td><td>#### 四级标题</td><td>层级更细的子标题</td></tr><tr><td><code>##### 五级标题</code></td><td>##### 五级标题</td><td>字体较小，适合细节分类</td></tr><tr><td><code>###### 六级标题</code></td><td>###### 六级标题</td><td>最小级别标题，慎用</td></tr></tbody></table><h2 id="二、文本样式（加粗-斜体-删除线等）"><a href="#二、文本样式（加粗-斜体-删除线等）" class="headerlink" title="二、文本样式（加粗 &#x2F; 斜体 &#x2F; 删除线等）"></a>二、文本样式（加粗 &#x2F; 斜体 &#x2F; 删除线等）</h2><p>用于突出或修饰文本，支持多种组合样式，满足不同强调需求。</p><table><thead><tr><th>语法示例</th><th>效果展示</th><th>说明</th></tr></thead><tbody><tr><td><code>**加粗文本**</code></td><td><strong>加粗文本</strong></td><td>最常用强调方式，突出核心信息</td></tr><tr><td><code>*斜体文本*</code></td><td><em>斜体文本</em></td><td>用于轻微强调或区分（如书名、术语）</td></tr><tr><td><code>***加粗斜体***</code></td><td><em><strong>加粗斜体</strong></em></td><td>双重强调，慎用避免视觉杂乱</td></tr><tr><td><code>~~删除线文本~~</code></td><td><del>删除线文本</del></td><td>表示废弃、修改前的内容</td></tr><tr><td><code>==高亮文本==</code></td><td>&#x3D;&#x3D; 高亮文本 &#x3D;&#x3D;</td><td>突出重点内容（部分平台支持，如 Typora）</td></tr><tr><td><code>H~2~O</code></td><td>H<del>2</del>O</td><td>下标，用于化学式、脚注标记</td></tr><tr><td><code>X^2^</code></td><td>X^2^</td><td>上标，用于公式、指数（如平方、幂次）</td></tr></tbody></table><h2 id="三、列表（有序-无序-嵌套-任务列表）"><a href="#三、列表（有序-无序-嵌套-任务列表）" class="headerlink" title="三、列表（有序 &#x2F; 无序 &#x2F; 嵌套 &#x2F; 任务列表）"></a>三、列表（有序 &#x2F; 无序 &#x2F; 嵌套 &#x2F; 任务列表）</h2><p>用于梳理内容结构，支持有序排列、无序分类、层级嵌套，以及可勾选的任务列表。</p><h3 id="1-无序列表（常用）"><a href="#1-无序列表（常用）" class="headerlink" title="1. 无序列表（常用）"></a>1. 无序列表（常用）</h3><p>用 <code>-</code>、<code>*</code>、<code>+</code> 开头（效果一致，推荐统一用 <code>-</code> 保持规范），后面加空格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 列表项1（用 - 开头）</span><br><span class="line"><span class="bullet">-</span> 列表项2</span><br><span class="line"><span class="bullet">  -</span> 嵌套子项1（前面加 2 个空格）</span><br><span class="line"><span class="bullet">  -</span> 嵌套子项2</span><br><span class="line"><span class="bullet">    -</span> 二级嵌套（再加 2 个空格，最多支持多层）</span><br><span class="line"><span class="bullet">*</span> 列表项3（用 * 开头，效果同上）</span><br><span class="line"><span class="bullet">+</span> 列表项4（用 + 开头，效果同上）</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：</p><ul><li><p>列表项 1（用 - 开头）</p></li><li><p>列表项 2</p><ul><li>嵌套子项 1（前面加 2 个空格）</li><li>嵌套子项 2<ul><li>二级嵌套（再加 2 个空格，最多支持多层）</li></ul></li></ul></li><li><p>列表项 3（用 * 开头，效果同上）</p></li><li><p>列表项 4（用 + 开头，效果同上）</p></li></ul><h3 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2. 有序列表"></a>2. 有序列表</h3><p>用「数字 + .」开头，后面加空格，序号会自动递增（即使手动写错，渲染后也会修正）。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一步：准备材料</span><br><span class="line"><span class="bullet">2.</span> 第二步：操作步骤</span><br><span class="line"><span class="bullet">   1.</span> 子步骤1（前面加 2 个空格）</span><br><span class="line"><span class="bullet">   2.</span> 子步骤2</span><br><span class="line"><span class="bullet">3.</span> 第三步：完成检查</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：</p><ol><li>第一步：准备材料</li><li>第二步：操作步骤<ol><li>子步骤 1（前面加 2 个空格）</li><li>子步骤 2</li></ol></li><li>第三步：完成检查</li></ol><h3 id="3-任务列表（待办-已办）"><a href="#3-任务列表（待办-已办）" class="headerlink" title="3. 任务列表（待办 &#x2F; 已办）"></a>3. 任务列表（待办 &#x2F; 已办）</h3><p>用 <code>- [ ]</code> 表示待办，<code>- [x]</code> 表示已办（<code>[ ]</code> 内的空格和 <code>x</code> 需英文格式）。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [x] 已完成任务1（如：学习标题语法）</span><br><span class="line"><span class="bullet">-</span> [x] 已完成任务2（如：练习列表嵌套）</span><br><span class="line"><span class="bullet">-</span> [ ] 待办任务1（如：掌握表格对齐）</span><br><span class="line"><span class="bullet">-</span> [ ] 待办任务2（如：尝试代码块）</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：  </p><ul><li><input checked="" disabled="" type="checkbox"> 已完成任务 1（如：学习标题语法）</li><li><input checked="" disabled="" type="checkbox"> 已完成任务 2（如：练习列表嵌套）</li><li><input disabled="" type="checkbox"> 待办任务 1（如：掌握表格对齐）</li><li><input disabled="" type="checkbox"> 待办任务 2（如：尝试代码块）</li></ul><h2 id="四、链接（普通链接-锚点-邮箱链接）"><a href="#四、链接（普通链接-锚点-邮箱链接）" class="headerlink" title="四、链接（普通链接 &#x2F; 锚点 &#x2F; 邮箱链接）"></a>四、链接（普通链接 &#x2F; 锚点 &#x2F; 邮箱链接）</h2><p>用于插入外部链接、文档内跳转或邮箱地址，支持自定义显示文本。</p><table><thead><tr><th>类型</th><th>语法示例</th><th>效果展示</th><th>说明</th></tr></thead><tbody><tr><td>普通链接</td><td><code>[Markdown 官网](https://daringfireball.net/projects/markdown/)</code></td><td><a href="https://daringfireball.net/projects/markdown/">Markdown 官网</a></td><td>点击文本跳转到指定网址</td></tr><tr><td>带提示链接</td><td><code>[知乎](https://www.zhihu.com &quot;点击跳转到知乎首页&quot;)</code></td><td><a href="https://www.zhihu.com/">知乎</a></td><td>鼠标悬停时显示提示文本（双引号内内容）</td></tr><tr><td>锚点链接（文档内跳转）</td><td>1. 先定义锚点：<code>&lt;a id=&quot;top&quot;&gt;顶部&lt;/a&gt;</code>2. 再写跳转链接：<code>[回到顶部](#top)</code></td><td><a href="https://www.doubao.com/chat/21842978001778434#top">回到顶部</a></td><td>用于长文档内快速跳转（锚点 ID 需唯一）</td></tr><tr><td>邮箱链接</td><td><code>&lt;example@163.com&gt;</code> 或 <code>[联系我](mailto:example@163.com)</code></td><td><a href="mailto:example@163.com">example@163.com</a> 或 <a href="mailto:example@163.com">联系我</a></td><td>点击可直接调用邮箱客户端发送邮件</td></tr></tbody></table><h2 id="五、图片（普通图片-带链接图片-本地图片）"><a href="#五、图片（普通图片-带链接图片-本地图片）" class="headerlink" title="五、图片（普通图片 &#x2F; 带链接图片 &#x2F; 本地图片）"></a>五、图片（普通图片 &#x2F; 带链接图片 &#x2F; 本地图片）</h2><p>用于插入图片，支持网络图片、本地图片，还可给图片加跳转链接。</p><table><thead><tr><th>类型</th><th>语法示例</th><th>说明</th></tr></thead><tbody><tr><td>网络图片</td><td><code>![Markdown 图标](https://picsum.photos/id/0/200/100 &quot;Markdown 图标&quot;)</code></td><td><code>!</code> 开头（区别于链接），<code>[]</code> 内是「替代文本」（图片加载失败时显示），<code>()</code> 内是图片 URL + 可选标题（悬停显示），<code>200/100</code> 可指定宽 &#x2F; 高（部分平台支持）</td></tr><tr><td>本地图片</td><td><code>![我的截图](./images/screenshot.png)</code></td><td>用于插入本地文件，<code>./images/</code> 是图片相对于当前文档的路径（需确保路径正确）</td></tr><tr><td>带链接图片</td><td><code>[![Markdown 图标](https://picsum.photos/id/0/200/100)](https://daringfireball.net/projects/markdown/)</code></td><td>把图片嵌套进链接，点击图片跳转到指定网址（外层 <code>[]()</code> 是链接，内层 <code>![]()</code> 是图片）</td></tr></tbody></table><p><strong>效果展示（网络图片）</strong>：</p><p><img src="data:image/svg+xml,%3csvg%20xmlns=%27http://www.w3.org/2000/svg%27%20version=%271.1%27%20width=%27400%27%20height=%27256%27/%3e" alt="img"><img src="https://picsum.photos/id/0/200/100" alt="image"></p><h2 id="六、引用（单层-嵌套-混合样式）"><a href="#六、引用（单层-嵌套-混合样式）" class="headerlink" title="六、引用（单层 &#x2F; 嵌套 &#x2F; 混合样式）"></a>六、引用（单层 &#x2F; 嵌套 &#x2F; 混合样式）</h2><p>用于引用他人观点、文献内容或突出强调的文本，支持多层嵌套和混合其他样式。</p><h3 id="1-单层引用"><a href="#1-单层引用" class="headerlink" title="1. 单层引用"></a>1. 单层引用</h3><p>用 <code>&gt;</code> 开头，后面加空格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; Markdown 是一种轻量级标记语言，由约翰·格鲁伯（John Gruber）于 2004 年创建。</span></span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：</p><blockquote><p>Markdown 是一种轻量级标记语言，由约翰・格鲁伯（John Gruber）于 2004 年创建。</p></blockquote><h3 id="2-嵌套引用"><a href="#2-嵌套引用" class="headerlink" title="2. 嵌套引用"></a>2. 嵌套引用</h3><p>通过增加 <code>&gt;</code> 数量实现嵌套（每层加一个 <code>&gt;</code>）。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 第一层引用：这是主引用内容</span></span><br><span class="line">&gt;&gt; 第二层引用：嵌套在第一层内的子引用</span><br><span class="line">&gt;&gt;&gt; 第三层引用：可继续嵌套，建议不超过 3 层（避免视觉过深）</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：</p><blockquote><p>第一层引用：这是主引用内容</p><blockquote><p>第二层引用：嵌套在第一层内的子引用</p><blockquote><p>第三层引用：可继续嵌套，建议不超过 3 层（避免视觉过深）</p></blockquote></blockquote></blockquote><h3 id="3-混合样式引用"><a href="#3-混合样式引用" class="headerlink" title="3. 混合样式引用"></a>3. 混合样式引用</h3><p>引用内可嵌套加粗、列表、链接等样式。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; <span class="strong">**注意事项**</span>：</span></span><br><span class="line"><span class="quote">&gt; 1. 引用内可放有序列表</span></span><br><span class="line"><span class="quote">&gt; 2. 也可放无序列表：</span></span><br><span class="line"><span class="quote">&gt;    - 子项1</span></span><br><span class="line"><span class="quote">&gt;    - 子项2（带链接：[<span class="string">Markdown 指南</span>](<span class="link">https://www.markdownguide.org/</span>)）</span></span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：</p><blockquote><p><strong>注意事项</strong>：</p><ol><li>引用内可放有序列表</li><li>也可放无序列表：<ul><li>子项 1</li><li>子项 2（带链接：<a href="https://www.markdownguide.org/">Markdown 指南</a>）</li></ul></li></ol></blockquote><h2 id="七、代码（单行代码-多行代码块-语法高亮）"><a href="#七、代码（单行代码-多行代码块-语法高亮）" class="headerlink" title="七、代码（单行代码 &#x2F; 多行代码块 &#x2F; 语法高亮）"></a>七、代码（单行代码 &#x2F; 多行代码块 &#x2F; 语法高亮）</h2><p>用于展示代码片段，避免代码被误渲染，支持单行和多行，且可指定语言实现语法高亮。</p><h3 id="1-单行代码"><a href="#1-单行代码" class="headerlink" title="1. 单行代码"></a>1. 单行代码</h3><p>用 **单个反引号(`)** 包裹代码（反引号在键盘 <code>Esc</code> 键下方）。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打印语句在 Python 中是 <span class="code">`print(&quot;Hello World&quot;)`</span>，在 JavaScript 中是 <span class="code">`console.log(&quot;Hello World&quot;)`</span>。</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：</p><p>打印语句在 Python 中是 <code>print(&quot;Hello World&quot;)</code>，在 JavaScript 中是 <code>console.log(&quot;Hello World&quot;)</code>。</p><h3 id="2-多行代码块（常用）"><a href="#2-多行代码块（常用）" class="headerlink" title="2. 多行代码块（常用）"></a>2. 多行代码块（常用）</h3><p>用 **三个反引号(`&#96;&#96;)** 包裹代码，开头的 `&#96;&#96;后可指定代码语言（如 <code>python</code>、<code>javascript</code>），实现语法高亮。</p><p><strong>效果展示</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是 Python 多行代码示例（带语法高亮）</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_sum</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算两个数的和&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(a, (<span class="built_in">int</span>, <span class="built_in">float</span>)) <span class="keyword">and</span> <span class="built_in">isinstance</span>(b, (<span class="built_in">int</span>, <span class="built_in">float</span>)):</span><br><span class="line">        <span class="keyword">return</span> a + b</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;请输入数字类型&quot;</span></span><br><span class="line"></span><br><span class="line">result = calculate_sum(<span class="number">5</span>, <span class="number">3.2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;结果：<span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="3-代码块指定语言"><a href="#3-代码块指定语言" class="headerlink" title="3. 代码块指定语言"></a>3. 代码块指定语言</h3><p>常见支持的语言：<code>python</code>、<code>javascript</code>、<code>java</code>、<code>html</code>、<code>css</code>、<code>sql</code>、<code>bash</code> 等，不指定语言则默认纯文本。</p><p><strong>效果展示</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML 代码示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段 HTML 文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="八、分割线"><a href="#八、分割线" class="headerlink" title="八、分割线"></a>八、分割线</h2><p>用于分隔文档不同章节或内容块，样式简洁，支持三种写法（效果一致，推荐用 <code>---</code>）。</p><table><thead><tr><th>语法示例</th><th>效果展示</th><th>说明</th></tr></thead><tbody><tr><td><code>---</code></td><td>—</td><td>最常用，需单独占一行，前后建议空一行（避免与标题混淆）</td></tr><tr><td><code>***</code></td><td>***</td><td>效果同上，与 <code>---</code> 无区别</td></tr><tr><td><code>___</code>（三个下划线）</td><td>___</td><td>效果同上，不常用（易与强调混淆）</td></tr></tbody></table><h2 id="九、表格（基础表格-对齐-合并单元格）"><a href="#九、表格（基础表格-对齐-合并单元格）" class="headerlink" title="九、表格（基础表格 &#x2F; 对齐 &#x2F; 合并单元格）"></a>九、表格（基础表格 &#x2F; 对齐 &#x2F; 合并单元格）</h2><p>用于展示结构化数据（如对比、统计），支持自定义对齐方式，部分平台支持合并单元格。</p><h3 id="1-基础表格"><a href="#1-基础表格" class="headerlink" title="1. 基础表格"></a>1. 基础表格</h3><p>核心结构：<code>表头行 + 分隔线行 + 内容行</code>，<code>|</code> 分隔列，分隔线行用 <code>-</code> 填充，<code>:</code> 控制对齐。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 姓名 | 年龄 | 职业 | 城市 |</span><br><span class="line">|------|------|------|------|</span><br><span class="line">| 张三 | 25   | 程序员 | 北京 |</span><br><span class="line">| 李四 | 30   | 产品经理 | 上海 |</span><br><span class="line">| 王五 | 28   | 设计师 | 广州 |</span><br></pre></td></tr></table></figure><p><strong>效果展示（默认左对齐）</strong>：</p><table><thead><tr><th>姓名</th><th>年龄</th><th>职业</th><th>城市</th></tr></thead><tbody><tr><td>张三</td><td>25</td><td>程序员</td><td>北京</td></tr><tr><td>李四</td><td>30</td><td>产品经理</td><td>上海</td></tr><tr><td>王五</td><td>28</td><td>设计师</td><td>广州</td></tr></tbody></table><h3 id="2-自定义对齐（核心）"><a href="#2-自定义对齐（核心）" class="headerlink" title="2. 自定义对齐（核心）"></a>2. 自定义对齐（核心）</h3><p>通过分隔线行的 <code>:</code> 位置控制对齐，<code>:</code> 在哪侧就向哪侧对齐，两侧都有 <code>:</code> 则居中。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐列 | 居中对齐列 | 右对齐列 |</span><br><span class="line">|:---------|:----------:|---------:|  &lt;!-- 分隔线行：: 控制对齐 --&gt;</span><br><span class="line">| 内容1    | 内容2      | 内容3    |</span><br><span class="line">| 长文本示例：左对齐会靠左显示 | 长文本示例：居中对齐会居中 | 长文本示例：右对齐会靠右显示 |</span><br><span class="line">| 100      | 200        | 300      |</span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：</p><table><thead><tr><th>左对齐列</th><th>居中对齐列</th><th>右对齐列</th></tr></thead><tbody><tr><td>内容 1</td><td>内容 2</td><td>内容 3</td></tr><tr><td>长文本示例：左对齐会靠左显示</td><td>长文本示例：居中对齐会居中</td><td>长文本示例：右对齐会靠右显示</td></tr><tr><td>100</td><td>200</td><td>300</td></tr></tbody></table><h3 id="3-合并单元格（进阶）"><a href="#3-合并单元格（进阶）" class="headerlink" title="3. 合并单元格（进阶）"></a>3. 合并单元格（进阶）</h3><p>Markdown 原生不支持合并单元格，需借助 HTML 语法（部分平台支持，如 Typora、语雀）。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;td rowspan=&quot;2&quot;&gt;合并2行（纵向）&lt;/td&gt;  &lt;!-- rowspan：合并行数 --&gt;</span></span><br><span class="line"><span class="code">    &lt;td&gt;普通单元格1&lt;/td&gt;</span></span><br><span class="line"><span class="code">    &lt;td&gt;普通单元格2&lt;/td&gt;</span></span><br><span class="line"><span class="code">  &lt;/tr&gt;</span></span><br><span class="line"><span class="code">  &lt;tr&gt;</span></span><br><span class="line"><span class="code">    &lt;td&gt;普通单元格3&lt;/td&gt;</span></span><br><span class="line"><span class="code">    &lt;td&gt;普通单元格4&lt;/td&gt;</span></span><br><span class="line"><span class="code">  &lt;/tr&gt;</span></span><br><span class="line"><span class="code">  &lt;tr&gt;</span></span><br><span class="line"><span class="code">    &lt;td colspan=&quot;3&quot;&gt;合并3列（横向）&lt;/td&gt;  &lt;!-- colspan：合并列数 --&gt;</span></span><br><span class="line"><span class="code">  &lt;/tr&gt;</span></span><br><span class="line"><span class="code">&lt;/table&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：</p><table><tr><td rowspan="2">合并2行（纵向）</td><td>普通单元格1</td><td>普通单元格2</td></tr><tr><td>普通单元格3</td><td>普通单元格4</td></tr><tr><td colspan="3">合并3列（横向）</td></tr></table>    <h2 id="十、其他常用元素（脚注-目录-数学公式）"><a href="#十、其他常用元素（脚注-目录-数学公式）" class="headerlink" title="十、其他常用元素（脚注 &#x2F; 目录 &#x2F; 数学公式）"></a>十、其他常用元素（脚注 &#x2F; 目录 &#x2F; 数学公式）</h2><h3 id="1-脚注（文档注释）-有些平台并不支持"><a href="#1-脚注（文档注释）-有些平台并不支持" class="headerlink" title="1. 脚注（文档注释）(有些平台并不支持)"></a>1. 脚注（文档注释）(有些平台并不支持)</h3><p>用于添加补充说明，不影响正文阅读，点击脚注标记可跳转至注释处。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这是一段需要补充说明的正文[^1]，还有另一段[^2]。</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">脚注1的具体内容（通常放在文档末尾）</span></span><br><span class="line">[<span class="symbol">^2</span>]: <span class="link">脚注2的具体内容，支持换行和简单样式（如 **加粗**）</span></span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>：</p><p>这是一段需要补充说明的正文<a href="%E8%84%9A%E6%B3%A81%E7%9A%84%E5%85%B7%E4%BD%93%E5%86%85%E5%AE%B9%EF%BC%88%E9%80%9A%E5%B8%B8%E6%94%BE%E5%9C%A8%E6%96%87%E6%A1%A3%E6%9C%AB%E5%B0%BE%EF%BC%89">^1</a>，还有另一段 [^2]。</p><p>[^2]: 脚注 2 的具体内容，支持换行和简单样式（如 <strong>加粗</strong>）</p><h3 id="2-自动目录（TOC）"><a href="#2-自动目录（TOC）" class="headerlink" title="2. 自动目录（TOC）"></a>2. 自动目录（TOC）</h3><p>部分平台支持通过 <code>[TOC]</code> 自动生成目录，目录会关联所有标题，点击可跳转（如 Typora、语雀）。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[TOC]  &lt;!-- 自动生成目录，位置通常在文档开头 --&gt;</span><br><span class="line"></span><br><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">## 二级标题2</span></span><br></pre></td></tr></table></figure><p><strong>效果展示</strong>（以 Typora 为例）：</p><p>会生成一个包含所有标题的列表，点击标题名可直接跳转到对应位置。</p><h3 id="3-数学公式（LaTeX-语法）"><a href="#3-数学公式（LaTeX-语法）" class="headerlink" title="3. 数学公式（LaTeX 语法）"></a>3. 数学公式（LaTeX 语法）</h3><p>用于插入数学公式，支持行内公式和块级公式（部分平台支持，如 Typora、GitHub）。</p><table><thead><tr><th>类型</th><th>语法示例</th><th>效果展示</th></tr></thead><tbody><tr><td>行内公式</td><td><code>质能方程：$E=mc^2$</code></td><td>质能方程：(E&#x3D;mc^2)</td></tr><tr><td>块级公式</td><td><code>$$\sum_&#123;i=1&#125;^n x_i = x_1 + x_2 + ... + x_n$$</code></td><td>(\sum_{i&#x3D;1}^n x_i &#x3D; x_1 + x_2 + … + x_n)</td></tr></tbody></table><h2 id="语法兼容性说明"><a href="#语法兼容性说明" class="headerlink" title="语法兼容性说明"></a>语法兼容性说明</h2><ul><li>基础语法（标题、加粗、列表、链接等）在所有平台（GitHub、Typora、语雀、Notion 等）均支持；</li><li>进阶语法（高亮、脚注、数学公式、合并单元格）部分平台支持，建议根据使用场景选择（如写技术文档用 Typora，写在线笔记用语雀）。</li></ul></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown速查表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优化Hexo博客永久链接的方法</title>
      <link href="/posts/49656.html"/>
      <url>/posts/49656.html</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo默认的永久链接格式层级比较复杂，深度太大不利于 SEO，而且默认链接的格式是根据日期定义，一旦我们修改文章的日期，那么链接就会改变。</p><p>[^SEO]:  全称为 Search Engine Optimization（搜索引擎优化），是通过优化网站结构、内容、链接等要素，提升网站在搜索引擎自然搜索结果中排名的技术。对于博客而言，合理的链接结构（如层级浅、包含关键词）能帮助搜索引擎更高效地抓取和理解页面内容，从而提升文章的曝光度。</p><p><strong>这将会造成</strong> </p><ol><li>最直接的后果：原链接失效，出现 404 错误</li><li>间接影响：搜索引擎收录与博客权重受损</li></ol><p><strong>修改文章日期 &#x3D; 破坏链接永久性</strong>，会直接导致 404 错误和搜索引擎收录问题。</p><h2 id="优化方法"><a href="#优化方法" class="headerlink" title="优化方法"></a>优化方法</h2><p>优化方法有很多种，这里我只写一种优化方法<em><strong>hexo-abbrlink</strong></em>，也是最方便最推荐的方法。</p><hr><p>利用hexo-abbrlink插件可以将Hexo生成的<strong>永久链接</strong>转化为一个<strong>随机值</strong></p><p><strong>核心优势</strong>：链接不依赖文章日期、标题，修改这些信息后哈希值不变，永久链接始终有效，避免 404 和 SEO 权重丢失。</p><table><thead><tr><th>对比维度</th><th>Hexo 默认永久链接</th><th>hexo-abbrlink 插件生成链接</th></tr></thead><tbody><tr><td><strong>链接生成逻辑</strong></td><td>依赖文章「日期（年 &#x2F; 月 &#x2F; 日）+ 标题」动态变量，格式通常为 <code>:year/:month/:day/:title/</code></td><td>基于 CRC16&#x2F;CRC32 算法生成文章唯一哈希值，格式可自定义（如 <code>posts/:abbrlink/</code>）</td></tr><tr><td><strong>典型链接示例</strong></td><td><code>https://xxx.com/2025/09/26/hexo-link-opt/</code></td><td><code>https://xxx.com/posts/abc123/</code>（hex 格式）或 <code>https://xxx.com/posts/123456/</code>（dec 格式）</td></tr><tr><td><strong>链接永久性</strong></td><td>差：修改文章日期 &#x2F; 标题后，链接直接变更，原链接失效</td><td>优：哈希值与文章绑定，修改日期 &#x2F; 标题不影响链接，永久有效</td></tr><tr><td><strong>SEO 友好性</strong></td><td>较差：层级深（4-5 级），不利于爬虫抓取；标题含特殊字符时易出现链接乱码</td><td>较优：层级浅（1-2 级），爬虫抓取效率高；哈希值简洁无乱码，可搭配关键词路径（如 <code>tech/abc123</code>）</td></tr><tr><td><strong>用户可读性</strong></td><td>一般：可通过日期 + 标题初步判断文章主题，但链接冗长</td><td>一般：哈希值无语义，但可通过自定义路径（如 <code>java/def456</code>）补充主题信息</td></tr><tr><td><strong>修改灵活性</strong></td><td>差：修改日期 &#x2F; 标题必变链接，需手动处理 301 重定向</td><td>优：支持自由修改文章元信息（日期、标题），无需调整链接，无额外操作成本</td></tr><tr><td><strong>兼容性与配置成本</strong></td><td>无配置成本：Hexo 原生支持，无需额外安装插件</td><td>低配置成本：需安装插件 + 简单配置（选算法、定义路径），文档清晰易上手</td></tr><tr><td><strong>适用场景</strong></td><td>文章发布后几乎不修改日期 &#x2F; 标题，追求链接含语义信息的场景</td><td>需频繁调整文章元信息（如补档旧文、修正时间）、注重链接稳定性和 SEO 效率的场景</td></tr></tbody></table><h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 npm 安装插件</span></span><br><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>修改Hexo配置文件的 permalink: 字段</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br></pre></td></tr></table></figure><p>在_config.yml里增加 hexo-abbrlink 插件的配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-abbrlink</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>      <span class="comment">#支持crc16和crc32算法（默认crc16）</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>        <span class="comment">#支持dec和hex值（默认dec）</span></span><br><span class="line">  <span class="attr">drafts:</span> <span class="literal">false</span>   <span class="comment">#(true)Process draft,(false)Do not process draft. false(default) </span></span><br><span class="line">  <span class="comment"># Generate categories from directory-tree</span></span><br><span class="line">  <span class="comment"># depth: the max_depth of directory-tree you want to generate, should &gt; 0</span></span><br><span class="line">  <span class="attr">auto_category:</span></span><br><span class="line">     <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment">#true(default)</span></span><br><span class="line">     <span class="attr">depth:</span>        <span class="comment">#3(default)</span></span><br><span class="line">     <span class="attr">over_write:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">auto_title:</span> <span class="literal">false</span> <span class="comment">#enable auto title, it can auto fill the title by path</span></span><br><span class="line">  <span class="attr">auto_date:</span> <span class="literal">false</span> <span class="comment">#enable auto date, it can auto fill the date by time today</span></span><br><span class="line">  <span class="attr">force:</span> <span class="literal">false</span> <span class="comment">#enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>生成的链接将如下所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">crc16</span> <span class="string">&amp;</span> <span class="string">hex</span></span><br><span class="line"><span class="string">https://post.zz173.com/posts/66c8.html</span></span><br><span class="line"></span><br><span class="line"><span class="string">crc16</span> <span class="string">&amp;</span> <span class="string">dec</span></span><br><span class="line"><span class="string">https://post.zz173.com/posts/65535.html</span></span><br></pre></td></tr></table></figure><p>​    </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">crc32</span> <span class="string">&amp;</span> <span class="string">hex</span></span><br><span class="line"><span class="string">https://post.zz173.com/posts/8ddf18fb.html</span></span><br><span class="line"></span><br><span class="line"><span class="string">crc32</span> <span class="string">&amp;</span> <span class="string">dec</span></span><br><span class="line"><span class="string">https://post.zz173.com/posts/1690090958.html</span></span><br></pre></td></tr></table></figure><p>也可以在文章的 front-matter 部分手动填写 abbrlink 字段的值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">优化</span> <span class="string">Hexo</span> <span class="string">的永久链接</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">abbrlink:</span> <span class="string">hexo-permalinks</span> <span class="comment">#注意这部分</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2025-09-26 00:00:00</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>此时永久链接格式就是 <a href="https://lxzblog.click/posts/hexo-permalinks.html">https://lxzblog.click/posts/hexo-permalinks.html</a></p><p>本文参考文章：<a href="https://blog.dejavu.moe/posts/hexo-permalinks/">优化 Hexo 网站的永久链接格式</a></p></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>other</title>
      <link href="/posts/20709.html"/>
      <url>/posts/20709.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="06095fcad2b10e5ddd18d582c66060b0cbd4720b5a069777f5f8a5c287c0cd2c">10d79030e8222445804370796b90fca1b5fbb8c1b63e600d5c361b16b50a03a74622259a03ccc9bc24f84596c8a33303a3582523b1dae1421d312019afb9c52df5cb38cb778b975480418ee68516dd8d3b5de004c4322b9a76614a4bbbbd75b8a56b19e1344649cd5ce80fe7a6d11886439be75964c6e7df7201179e56ea20ce36eb558bd65499bf87cd89decba5b0bb946f090b79d74eb24b15340341a4376b2a251df2594476e812956c340906968c43c3196dfea4fa380d1d9816a7f03f58f229bc331a44d9579df1d1ca4bb39e3ff17e09dd7387f2e20780bb2b2853d7159aba3b93fd5d63bffe4e0eb19e54aac2246c9ace60699e1ff81c9b94f45340dfd0b8a91e306b91b22205fd768e8711c638bb6534972bdebda26e965b03c89d7aef342a3f9859d480123dcac3f6d72e28c28fd3ca2f1099b98bdfdafb2308b40cc719cfae713ff3ea05234ce3336b49282e7b42d6eb517f5220a8ad584ce46e2e8528f1a8a707b8de952c0fc1494b54af109ce2d11ef9c3e6b55f89669ec2df8e01ff7f8144ddf61e5bae642a60d8bd2d205cf9cf872d8706a927f46488770967f3855324d2ca02ee6d5245a0e670eeea1d0d15d3ae928de62b690110481b82b6b0bc211b86a977d168e668411d7ea378ef376cff8eab4812df6b54d3d27d206b29fa21d53efdc4ebd1be51fa8ec0fcb5cc31153a3c6f739264f439af0715d6006437bf94f04384e2dea4576b87adecdbb591446a913fdba2e48c22cfa3929c206f5a07a9d25316c7786becb12581bc92f8ecc37fd17e0f4a873e527be14eb6e762fadf581813ea41193c825a58e3155117884f2cfa779761a9ab88ae682cad827fb795f48049200ba000a4028a87045c5716616e4da40331b458a074896f94b3bec70c7b34e16b7142d75570ac82812a51ad6fba213b8aa8b2e4fb1df0f11e713c6c4d82d362c402cc33ef07d245f80e7f1d577a87b4aceaa7ca2f67005eb2a0e40184c766de6302a24ce93bfb477b6b8000e6836866c4e443153a7a9644a00045d4cac9f0aa3b7bf26eaad8974fa1371a4442701782a08fb14e9d162bb18d943974dbe9479b7bc26eeb8f4f2d23e0b41394483112333a66a61a9ae7e7cf83da9fed6203c96b97e0e94a179f02810ef9ec83d7bfc3bcdac86ff05f1bfd8a4810a9253db4bafdfb1c356735c912d7c19336e3dba4384a221f6c9fe239143545247f8ad890259620bd6ac9d15024aa83ca5572e0fc8ba4f770aaf01adf8faf578cc14b643d4a9684226a83787daf4a1e4ee1b8af82ad95f8ba637ae83af899cf976efdf517ecfc9b5ff1dfbaf78c097a1e714879bab5f790910db5dbde90319e01b81957aa46fb0755c9222749c881c2b71aa90b30c509e8f390c01faad07f49b22c2b7df4494840840d04033fd5276e5a34b99a5817b82b3af4460af52a5a97b24b2a5c255ea8bcba6d5c4e8b71bf3870fcc527d6e892e114991978571aec67e3a03a8b4b6858f2f7e27ff1346a14544ac37e9133387e5b9bc9c0a2de0d8b41212f82852577107309698301a5c20d3f69a033001e9a72cce3e7874f7d9ef058b52ddb8c9586f9131e0cce7dca43b0a39542d5acbdea8a55a4839b242e44a04924761f77edf9d5b9e5c2ca07e1d21625dd105cf08bcf458f2767198b3cafe3bb6d5ca8d783efd11357e73b795689c334ebebecd9326b150683b3cbbd7f475cee2e937946a19c647013566bdbb20d93b0b53eca21dfc552a8cf155777fe5d675fed7a4662819f2e23234f8303bbf71444d1b5cb33489c87a5ede294951b559c9d155de105197bc243cc54d0124763fe78e6c8590d2ed29e11df7b42118d3e570c6b2ec769bab02793266e088446564b52680cd656517041958f2e4f350289f4d10238c3363e9f985835bef52e0b51bddf6fadfac8792581fd72a16828296bc2361bdbae64264884a2c0715dc3598cfb5c00d776e9caaf2ab446995cb71e644e3a9ee94fb65f8e79fea432d6ee0580cc2deb976cd9855518c1b0f6be0bc12ad30c08219fc20ff51e2b9c9d6bb8efd0d1dd3d5dfef4f5a4d48110c4b371b9419dd70c3443f9b3e74ecd6ff8e910552ded24b0a4b3a16b165c4c6f263a7860f497ea779ee4739520c0d83b6db57f3195940c06fb70038bf04d171b30b6a47feed235b590a3b2b7bbead5d9cedfdcda76310a09eaff6087165151db2c5cb14acf32fc470eb131fbd86c1cbd591967f81033dd38e5d35dec90f8b2317065b407c8a73011fc37f2969a3d4dedc829581922b7817d63bef8aeca9b07e035a57480a446f52eeaa639beb69743e71a01164d37edf4d96e73d9feb24f7dcbeaa02f0b346be4de27be7ff881174891196f560d74aafdb3cda6f8f02f0a08408828ab34cd9b8c13eb49fde39fed5dabccb5bf6cbf58a5a19fe6ecfe4a65709392fe6abaeb9bf544b9b751880a83ed6f97d75a551fe6cde6fa5c96b0e2e95c5b98527da9f7f5b24475fb169d0a2eed0060ca7d6863a7746203f2ad4ccbd8ffd7d30cb560ba79c4100ae64a08305d205433196d38968740f8b72b8f8c4f38e9179c4c4306190c13bcc8d74d917bf3d4562504192510c4c2d4299ce266e86c9a15ad503d32bbe6f4bb6d6b1f9fc7f07edd4605a2b251d3372a2f1560f13b48a498451d1bc0e17382793ea1d057bd76e1b1475b7afb75378d10434bc808b99645eacf1f9db5122f852f89039f09d1227f47c793072c97942ec9e441b3604f3c0d7c4f9ae2f68e986467cb6780df46ef92ee0200f97b2ae12e65206e307476bfda6b2e3bf5a7a396fb22c8a020b73eb15f578d7cda56c4a1c14662bea5df1ad806cabcd8e79a5cf419483204264f385a2d7b349fce2640880f8571983282cf0800e65b5494d14124846da49ca51f19ffc591d9dd8f07174736dc1178917c1e4e388206eba8000f42cb2d1a6fe7b8fd9cf31ffbacd343293ffa94e6250533df770959dc4bee889c0ff485f26188578b31776d2843418f7e43e02077671b71b301a43cb6344e5556aedd8cc85a05001ebb68abf919cb4e5c3041c263eab79b494099c06289fc6f9bc76a67afa9f7e9c2a48533226c6f1c50cfc61899e9cb23c27c98f05101c8dadbe677af2d46787a9cb5f7ac18a9c8b273f54a99eff9d8452e60b5fe2c46041ec116294997eb86ab9c8ea78e7e10107043ae37c3c91c2d87bfc07c1e9875cad25d6561d21d8cdf66c92a506334c8204855f81c3f7a8c13b712e7637a0fab2c8b1146fe989c0edd6e40dd0d453a9c1c2f1194686ccbb159e4cce3a0393c1386fe3c8be23791210c91b613ddfd0926993e2101273c15dd065385d7a03f0a45b22b7c8925bb1b121173fefd95ad5c103e192ad434bf11267c73f8ff0ecac1156a5aaac459d1cdf1b6387af5e91d671866e5ae9544a795dc13e5421d0ada822902f54d6a5516b90e36e35629ca78f33d0838b8a13d02e147c126ba9c20e095d87ac69b19808e09fda0b5021074de669552b8290e1c2474beddc4820b9e0b55561dcd7a8721d66ac9fd6923e629d4accaa77d51a8f2a461d9ec8acea394cd53d260aca936233846b315419608d5e3cd2c1ee1d95e6e7507a744c7af16b9c6b262f2a4d7256395f2dc0dd0d76c8dfe3b696defe67be0b8a1ae01f4a8bfb2e641ef6bff81e9e0a0650d1192e57c5d6b0bf2a402ac5c4c89a2bdb0ffa2c28544e7f55637fd4bec93bc996389130abedaa3593a62a8f66aee0b549ff6b670f2f305f9e1aa9737ce6bbb397048f83328e2e5743a14db237047909a5f89ca77fa0d534846728f7d36c516b1481a7c6b3e4356cfe4ef9fd9b9abaeb30705e34a18941f90070b3e308a935bfc1e02fc7943bca78eca20c9831abaef16fb7df1f642402eac3dd1b17331dc1b020c57c4c2ed0803da913d7aa86384049486e53c5430f462dd755150a309e9fbedb01bbe77a814deff7dc9c5e265db8e72c3ec0c495dbf03718b70d40591665ac48cf917bbd3c4d045b6b814c763e982634ce516d26afc65a276aef0e599c73c358fcbaf0053e96ffd34b8fb3989c0d055c449602ba63553bd82635d7115ff964b4f7ea4918c3efdae1fa5075f6d60950c7560d920b8d11fb22b68308b0ead0d800a71c120af876937e29490bee4bcf21a2c8aa855957bafa0d2f3fcf6cd455e110958e98953575236e93abb4247268eb3ff68bf75109f935c1030547fb2cd108280403976f57303e6d5ccbf607f26387af58e16cb83ab64368dd8ecd4016827e639b8b70ca1e20494e1088959a97e7d8b8539162f83f6fb21e49dd34819231f3f88dc7181a37e751c89b60bb22f66e91ecfcb4ab09620cc4aa18fa1b7c19c6b1d2e67c01cb5e55e1e1d99695c89b61981b7d32167b9f87f25e40fd33163a6f24aab950bb83e1aa70a3005282921ef13aeec109d63455b38cb84c1e2097c29993e52b254112dc92ef682a6385a9cdeb86e38c49a73042ca7345b78c0ef8992bc7cf950ffb130226569b1a8283e9d35720826581bc872b8ff7bac3172c1cf8838b746d43ea7439ef3b7051658b6d09b779df5f94d13080fe43a9c974670d0825abf7c6b293a16a2ef3d0a6822299e9a9aa1d0cfb1e28aba659d420361a1ac5c965ed26297cb60f93a0958ac6e14fc236bc6ec9ab106666e1ef65c44afb654e0abaa71c915d1911bf460818bf6890e08443d0f0324ac421e3795d1cf3d2dd505b5e05a412b3a49f03a7fe9ba68d6767ec2d69d267816304c150b577e96abf3d88092bdb6fac57186c0d4f7a7a7a78bb1db37fab20b2e9ba6df8eb9be6735979ab976bca0b786d3a2c67498907bfc8528d52f6fbbce01b0294c048a29f7fa816a0c21f1e207bbf1f8dcb811db6d8e5ca18e22587874b0c013f6d0dfe465aa1d48f337aaa9eaffe6598478790b1b1c319305938b1a00786027263cd87d3d1aa168a366ee763dbe4d4312cb2b97c362ba5038fb2c7d24381ce861c8f6b4dce5cfa64d81128f58542b9c700d3c46ba9303aaf72b422831b1eff7f55de58d1dd27922ed993befa3f666c993dcfa32c022e47e8448ddfb614340bb9899472627204bda7de3d0c5f2fe1b3894307d185c4ecf244fbcfd6a38403021aa83ff2bb027486313c70c6f6d19e7799f56e1e91a2423a04f5ea7d9c5071935a9b1b6b7a37e40ed5b54c6beee04acb8fea46bc9ed9e03c09e1a13c928298d016a3df094cc75041333fe63c4ef55ee407e8d36031681e21b8f1b5fb62fb5f838db2ea2fff987ead82ee900f66a33bb5516cc7bdc9ec9f3bb3c68b1e2c0a5197de0552f0cddaed343fac33a6ab284e33a8e49012b062b6f9f50a9d91a6b7cd292c67b2754fde1e3ab64c8f874cca83003f781650486b200cfbff008e9b6bbd0bce2c1020c8ca6403624a8463d33914411d5e2c9ab37ae91b1daca3e06d67882117b632d1edd9439c2c030f20f6030c66c95e6a8c83cab7a53e88f3002f8705969d2f6f3422d552d2421adb7aae03112f699829f7f0bac845a10043ff490f4cffe85c8a908e3a576204d7467cd755eb7c0eb488e07f27065ac881cb9a761e1c1eecccf85457dac0e5b51f2efad998e578aa34c999b2878227a5b2f2998c5cc378766e72c0d5e02d169f961b8006944ef700f3bdb5fd4803349f9f6fb35a17b254d682ab30a00aca4227a7b6eb07d881387cf90237080e10b33e6515f66010625f0e37543e186c54411df3f9e6a57b742d189dcdeb8d2caa402784b94130e17e2de54485e63b31e2cdc28910581f5a82b297c91eb012a3130af8f55264ebba2613265dca524bcf62ceb0da00d7d4d7dcdb7a16ea887ac4650941188e6bdc398da2d60217d288cedec5085ba39c99752f36f5fab7c83cbca73d03dfa403bcb920e256461f5370420c74a0d4abcbaa903872443b81f8f189fc37d731419d17431f561827179ee34faff1b3110a4e0a27f6769c865eb82314f8c4beb88f02dd60b78dd136aadb6011e2c1457846301cb4663941c6ca00e3af6c55541e4d5e88e5ae311c15ff2711ca33329b43c9bcf2d2f4ad8fbbdd77942b26c0b77a1e8055d5bcef1f9eaea7d7b948ec2a23c99d1087fd06159ac7de6fc05c2c1062e16cc2999ce9f6c74ab5b8e9419315b39ae6a30f8de8a3a4f7e8f604b9ff8c4f18b0a5a1b33042ed76e6dcda6ffc6a37549130015c509a86fdef8ad83f0dd77b915584d04b4283a95fb6781aa738b6aaff27238317b21811f5aadf011c25af815511cddef701bdf7e5e4c3e1f6cba6b9f96ca518138a81991837e4d9cd22c3b09fa83d16eae1f240f2117419c6bcd0e0cd9129fbe06a8cafd91658e39091e4aeffe768bef5e77967ff77d4d7b037be07c2855fd927a2c5e3c362d5042c606c813e9c8a3bf56a7edc62fb7417bdbfe9bc84b989107ee06a95f5843b780ad52a6fbc581fb3b6c69c5399ce9aa26f944d87e9fe8b43e156b37ed607202d326873920ae25cf2230e8802aa849a0be2e241e820ed8ae578bc93289c739a64fb925d1eaed6affa543d3c01d9f70bf3936adf3f1789447206b4801ec30630557cef962103a68ee318d7db2050d06d2b589b4b73e07b4acec84f0e4ebf26aea166fcf5e662adb4d453485b4ffb92a1c7cab54949f81e8e5aafcb505ed9aef10354b338e1c930a19b9433dd941b6027c5b749bad1e4464c20ebc577dddeb4b05895aa3a750ff074d94b1b26d93888ecf951a00bee164de75432c796b05b085f086ee7ba2e287316d14675f48f06651630bfc68645a22a6bdafdd08cb10075fb3a0e25e61ad95ac633113503a6962f9dbd8444560bca5b8fa33ea34ce1fc1b6ad918e0bc8b782a84af17ea2a8b1b0d1fea35ff60648501c447ab12daa754ffb5da3de65b1ae240351fd255c902576cf93e2d59fb74173ee11c2ff7af834bc4f2ca59da1c347478cf77757c40441bb42b82ecc477a813d1554dde6c6aea223e42de61ba26759146c6664a579e2995cee498a9db6514af7bdb22b4ed0c0bcbb4498d0e404309fcb0c9e122a4935f97e4df3a00eb1be10a650b7ee462119884432ccd883297810a1da7440611e910be05e6d7cc65893d43bae7c25679162c73479b220b08cf258e5e7f9ce80e885da346c84e03b448213967496435fd57aacde1a42bb24518d47438a66ebaf754f6fd283669267e0e9b49c58fcf834b24d3989c47b243c3b1b494ec4085c723b98cd436324c66c206203d26ddfc51e09496a9f231c09394904747b97e11872956cc9b920a9400b75fab48984983224b82df6aeacc5ef484b9b61518cf936c612bea8d98fbeae3f5028e0843133fa60dd04bb5373568c0572926fe8f40e3d586c41eb15d91a4e3ac8fc9ecad508ddd272d021f34061e9c1121a839abb2cbfb1e4cb2b23676ec7c355bbd3bfed1facbd98e9436d1d85b736fdac274747ff0480a52d72dc2e9246223ac104193ac829d1ab3178fe2b725f94bea1f2331cb284ec73a3be3b41446aa3f63c07d2e15d7fce3db335abf7a82c00584a7b11dfbc2ce0e5ee128deac0a109fb372f92276a5e9ad5ad58cc7851b1d1b231f559a8a5549d8f7c13659cd0e1cf8514e154152e08c8cc7ea1ce09ff6e891e1b39330ed2cc9526ffb8eb3517a98942f864b18f96627baf3ce5330922874cd0032eaf1031f6b043e7790ccd4bd8ed2639d85ed83732c15aafc7c95de136683061a5dd4b53c52322f00ddeb02dcab3c13af6c8dfca054fa2687521bc00c7a0f81b58fd68b8294888765e11889459e66a26e146d7e82645f91628aac25e43225f2151d8b02f3c31557435fc3242e35d5cd4fd46a565d56eb628eaf01552a0f059d6dfad37b51e6e1486e287143da1a5f4785e6574a5877dd2d21aadcc7bc7c2d2a66536e35093a0cc89ae68fc42c8f4430bd868bff26e4c5fe8d36422cc96e26fca585546020a4093dfd201f479181b932d79e3c13e9dfdbddc89057d19712857c377fb373dbfa595c66048765d20b96926239a1c58a7653fe3bb7a8cc592f2ac91496c161169e71592e4b234f074a82e8b46ed296be06c4f120265c252632cc0b910333c65d22161eb2c7f958cffe1ac10f77d2e0fccf3e249b1b57831bd3201ee313a4bd4c6e731b964c2a22a969b2a0bb8c4c8ade611d55de1d196932a8ced71ebf20f084f64165898d74c2fe323fd2ede9dedad0ef04f8313f2e003ba8d1e4241d8d3b69bd760d54cb5e3be96a69a0db4abdf1f12231f58c5258834d2421d88ce14b94cb890789ad7528e35e1414e3ef4fd8863bf72f71d83fd152dacf0125d905fe6ca4d69b8ef939c66f0a8bd9c9238f629b66db3fbecc6e3f4d173af86c3fd3964362e56b66c1728438c5ce0e29694639df558b575c6a9f8f32bc7e38e0069dcbc6bb02e8f70e08f18a1dbb7af8be23861e68a178a25f1e65ee9957522b0085bbf9189cf12fed014941c905e107084c4a43018fad825b984d8724eaf06222f7f80aee27b9222325d1c7680c03ea95a8ec23243c3fa0d2c4fbda56236f7aa3805eaa1ff57a36b13ef625af4d2e9d43a1982d2cfaa8fce1bcdbafc489fb814f7e522fff22a9fb58f41f740c6883e50a887d2e6ef81ad429a332fa0c44facfd81d2c9ed1b3f1283fea3947542e7c6809640e099b9095de0fb7f6bae17825154dfb5c61b9cc9dc2bbee57ce66d0ad075cdfb0e7e95ed7180cbe89b5ba33bb82b36d53a89a164297fa583d889cb1b400657de151735a09df4fdcd248549a473a25266d5872a821a4b95f2095fb4efe6948490b0f0d13fcd55df24b2ab92b7c716e4a498a9ac6acae9764d672d83f36057312ed2a77c65f83c0a264e9944016884bbda75199be02ee01e5dda73ddf7152c8badb1f4e9fff3445d91671a92fbd2fb6a33e23f6c903a08435a8a1c59065f413d1f7fce0405b5a9a788f58b894fe6ea4908158d183bd550425987e18fc47a863fbe27dc6b7005c8d44afa4d16e1f921c1ec613e79fd53d7f2734a0e34ad772a4e7a8a6c6d36c70bd986c1ce05e51a53dd2cbdc2a7d1385c356b08cc4f5dfb5f2bab9c78aceb62079f5e72290100c1287235f0030c39b43ddf7b3769fde1055d06af54bc72481bec427d1e5449540938ec6a018b370e342b6f6f3447437b7c2dfd2020b9b0f095bdceaa97242b9c206cc1fca1bd4a286364febd0cf81366ce294f69a747493d4124496f88e5789b0fb3640c5c9016c0b327bea61ca6f6499fa9aa375cb842c7019e97f4ae4da8cac3b1e283582eea95801d615eea48809f19</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p></div>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
